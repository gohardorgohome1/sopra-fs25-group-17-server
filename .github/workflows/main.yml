
name: Deploy Project to App Engine

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

  # run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test and Sonarqube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysiss

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"


      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info


      - name: Test and analyze
        run: ./gradlew test jacocoTestReport sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
  name: Deploying to Google Cloud
  runs-on: ubuntu-latest

  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Clean and build with Gradle
      run: ./gradlew clean build

    - name: Inject OPENAI_API_KEY into app.yaml
      run: |
        sed -i "s|__OPENAI_API_KEY__|${{ secrets.OPENAI_API_KEY }}|" app.yaml

    - name: Deploy to App Engine
      uses: google-github-actions/deploy-appengine@v0.2.0
      with:
        deliverables: app.yaml
        version: flex-v1
        credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}
